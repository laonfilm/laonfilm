---
// src/components/Nav.astro
const siteTitle = "LAonFilm";
const tagline = "A love letter to Los Angeles, written on instant film.";
---
<div class="nav-wrapper">
  <nav class="nav" aria-label="Primary">
    <!-- Left: logo + title + – + tagline -->
    <div class="brandline">
      <a href="/" class="brand" aria-label="LAonFilm home">
        <img src="/images/LAonFilm.png" alt="LAonFilm logo" class="logo" />
        <span class="title">{siteTitle}</span>
      </a>
      <span class="tagline">– {tagline}</span>
    </div>

    <!-- Right: hamburger (typewriter vibe) -->
    <input id="menu-toggle" type="checkbox" class="menu-toggle" aria-hidden="true" />
    <label
      for="menu-toggle"
      class="menu-btn"
      aria-label="Toggle menu"
      aria-controls="primary-links"
      aria-expanded="false"
    >&&&</label>

    <!-- Nav links -->
    <ul id="primary-links" class="links">
      <li><a href="/ref/food">Food</a></li>
      <li><a href="/ref/drink">Drink</a></li>
      <li><a href="/ref/culture">Culture</a></li>
      <li><a href="/ref/views">Views</a></li>
      <li><a href="/ref/dispatches">Dispatches</a></li>
      <li><a href="/about">About</a></li>
      <li><a href="/search">Search</a></li>
    </ul>
  </nav>
  <!-- Full width border separate from nav -->
  <div class="nav-border"></div>
</div>

<style>
/* ====== Wrapper to contain nav and border ====== */
.nav-wrapper {
  position: relative;
  background: var(--bg);
}

/* ====== Bar container ====== */
.nav {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem 1rem;
  column-gap: 1rem;
  max-width: var(--container);
  margin: 0 auto;
}

/* Full width typewriter border - completely separate element */
.nav-border {
  width: 100%;
  height: 2px;
  background-image: 
    linear-gradient(90deg, 
      var(--text) 0px, var(--text) 4px, 
      transparent 4px, transparent 10px,
      var(--text) 10px, var(--text) 13px,
      transparent 13px, transparent 18px,
      var(--text) 18px, var(--text) 22px,
      transparent 22px, transparent 27px,
      var(--text) 27px, var(--text) 30px,
      transparent 30px, transparent 36px
    );
  background-size: 36px 2px;
  background-repeat: repeat-x;
  opacity: 0.7;
}

/* ====== Left cluster: brand + tagline ====== */
.brandline {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex: 1 1 auto;
  min-width: 0;
}

.brand {
  display: inline-flex;
  align-items: center;
  text-decoration: none;
  color: var(--text);
  font-weight: 700;
  font-size: 1.35rem;
  letter-spacing: .5px;
  white-space: nowrap;
}

.logo {
  height: 40px;
  width: auto;
  margin-right: 0.4rem;
}

.tagline {
  font-size: 0.95rem;
  color: var(--text);
  opacity: 0.75;
  letter-spacing: .3px;
  margin-left: .1rem;
  white-space: nowrap;
}

/* ====== Right cluster: links + hamburger ====== */
.links {
  display: flex;
  gap: 1rem;
  list-style: none;
  margin: 0;
  padding: 0;
  align-items: center;
  flex-shrink: 0;
}

/* Hamburger (checkbox hack) */
.menu-toggle { display: none; }

.menu-btn {
  display: none;
  font-family: "Special Elite","Courier New",Courier,monospace;
  font-size: 1.25rem;
  cursor: pointer;
  user-select: none;
  padding: .25rem .5rem;
  line-height: 1;
}

/* ====== Mobile behavior ====== */
@media (max-width: 720px) {
  .tagline { display: none; }
  .logo { height: 36px; }
  .menu-btn { display: inline-block; }

  /* Simple overlay menu - no borders at all */
.links {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  height: auto;
  background: var(--bg);
  padding: 0.75rem 1rem 1.5rem;
  flex-direction: column;
  align-items: flex-end;
  gap: .6rem;
  width: 100%;
  z-index: 1000;
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
}

  /* Add top border to mobile menu using separate element */
  .links::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 0px;
    background-image: 
      linear-gradient(90deg, 
        var(--text) 0px, var(--text) 4px, 
        transparent 4px, transparent 10px,
        var(--text) 10px, var(--text) 13px,
        transparent 13px, transparent 18px,
        var(--text) 18px, var(--text) 22px,
        transparent 22px, transparent 27px,
        var(--text) 27px, var(--text) 30px,
        transparent 30px, transparent 36px
      );
    background-size: 36px 2px;
    background-repeat: repeat-x;
    opacity: 0.7;
  }

  /* Bigger, comfy tap targets in the overlay */
  .links a {
    font-size: 1.125rem;
    line-height: 1.9;
  }

  /* Show when toggled */
  .menu-toggle:checked ~ .links { display: flex; }
}
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const toggle = document.getElementById("menu-toggle");
  const menu   = document.getElementById("primary-links");
  const btn    = document.querySelector(".menu-btn");

  const setExpanded = () => {
    if (btn && toggle) btn.setAttribute("aria-expanded", toggle.checked ? "true" : "false");
  };

  const applyScrollLock = () => {
    if (!toggle) return;
    document.documentElement.style.scrollBehavior = "auto";
    document.body.style.overflow = toggle.checked ? "hidden" : "";
    document.body.style.touchAction = toggle.checked ? "none" : "";
  };

  const updateUI = () => {
    setExpanded();
    applyScrollLock();
  };

  toggle?.addEventListener("change", updateUI);

  // Close on link click
  menu?.querySelectorAll("a").forEach(a => {
    a.addEventListener("click", () => { 
      if (toggle) toggle.checked = false; 
      updateUI(); 
    });
  });

  // Close on outside click
  document.addEventListener("pointerdown", (ev) => {
    if (!toggle?.checked) return;
    const t = ev.target;
    if (!menu.contains(t) && !btn.contains(t) && t !== toggle) {
      toggle.checked = false;
      updateUI();
    }
  });

  // Close on ESC
  document.addEventListener("keydown", (ev) => {
    if (ev.key === "Escape" && toggle?.checked) {
      toggle.checked = false;
      updateUI();
    }
  });
});
</script>
