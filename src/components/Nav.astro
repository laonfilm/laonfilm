---
// src/components/Nav.astro
const siteTitle = "LAonFilm";
const tagline = "a love letter to Los Angeles";
---
<nav class="nav" aria-label="Primary">
  <!-- Left: logo + title + – + tagline -->
  <div class="brandline">
    <a href="/" class="brand" aria-label="LAonFilm home">
      <img src="/images/LAonFilm.png" alt="LAonFilm logo" class="logo" />
      <span class="title">{siteTitle}</span>
    </a>
    <span class="tagline">– {tagline}</span>
  </div>

  <!-- Right: hamburger (typewriter vibe) -->
  <input id="menu-toggle" type="checkbox" class="menu-toggle" aria-hidden="true" />
  <label
    for="menu-toggle"
    class="menu-btn"
    aria-label="Toggle menu"
    aria-controls="primary-links"
    aria-expanded="false"
  >&&&</label>

  <!-- Nav links -->
  <ul id="primary-links" class="links">
    <li><a href="/tagged/food">Food</a></li>
    <li><a href="/tagged/drink">Drink</a></li>
    <li><a href="/tagged/culture">Culture</a></li>
    <li><a href="/tagged/views">Views</a></li>
    <li><a href="/tagged/dispatches">Dispatches</a></li>
    <li><a href="/search">Search</a></li>
  </ul>
</nav>

<style>
/* ====== Bar container ====== */
.nav {
  position: relative;                 /* lets the overlay anchor to the bar */
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem 1rem;
  column-gap: 1rem;
}

/* single, footer-tone dashed rule (prevents double line) */
.nav::after {
  content: "";
  position: absolute;
  left: 0; right: 0; bottom: 0;
  pointer-events: none;
}

/* ====== Left cluster: brand + tagline ====== */
.brandline {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex: 1 1 auto;
  min-width: 0;
}

.brand {
  display: inline-flex;
  align-items: center;
  text-decoration: none;    /* brand not underlined */
  color: var(--text);
  font-weight: 700;
  font-size: 1.35rem;
  letter-spacing: .5px;
  white-space: nowrap;
}

.logo {
  height: 40px;             /* bigger on all views */
  width: auto;
  margin-right: 0.4rem;
}

.tagline {
  font-size: 0.95rem;
  color: var(--text);
  opacity: 0.75;
  letter-spacing: .3px;
  margin-left: .1rem;
  white-space: nowrap;
}

/* ====== Right cluster: links + hamburger ====== */
.links {
  display: flex;
  gap: 1rem;
  list-style: none;
  margin: 0;
  padding: 0;
  align-items: center;
  flex-shrink: 0;
}

/* Hamburger (checkbox hack) */
.menu-toggle { display: none; }

.menu-btn {
  display: none; /* visible only on small screens */
  font-family: "Special Elite","Courier New",Courier,monospace;
  font-size: 1.25rem;
  cursor: pointer;
  user-select: none;
  padding: .25rem .5rem;
  line-height: 1;
}

/* ====== Mobile behavior ====== */
@media (max-width: 720px) {
  .tagline { display: none; }
  .logo { height: 36px; }
  .menu-btn { display: inline-block; }

  /* Full-screen overlay menu (no border here to avoid “double dash”) */
.links {
  display: none;
  position: fixed;
  top: 61px;                   
  left: 0;
  right: 0;
  bottom: 60;
  background: var(--bg);
  padding: 0.75rem 1rem 1.5rem;
  flex-direction: column;
  align-items: flex-end;
  gap: .6rem;
  width: 100%;
  z-index: 1000;
}
  /* Bigger, comfy tap targets in the overlay */
  .links a {
    font-size: 1.125rem;
    line-height: 1.9;
  }

  /* Show when toggled */
  .menu-toggle:checked ~ .links { display: flex; }
}
</style>

<script>
  // Mobile menu polish:
  // - place the overlay exactly under the nav bar (no gap when scrolled)
  // - lock page scroll while open
  // - update aria-expanded
  // - close when: link click, outside click, or ESC
  document.addEventListener("DOMContentLoaded", () => {
    const toggle = document.getElementById("menu-toggle");
    const menu   = document.getElementById("primary-links");
    const btn    = document.querySelector(".menu-btn");
    const navBar = document.querySelector(".nav");


    const setExpanded = () => {
      if (btn && toggle) btn.setAttribute("aria-expanded", toggle.checked ? "true" : "false");
    };

    const applyScrollLock = () => {
      if (!toggle) return;
      document.documentElement.style.scrollBehavior = "auto"; // avoid jank
      document.body.style.overflow = toggle.checked ? "hidden" : "";
      document.body.style.touchAction = toggle.checked ? "none" : "";
    };

    const updateUI = () => {
      setExpanded();
      applyScrollLock();
    };


    // Keep the panel glued to the bar and lock/unlock scroll
    toggle?.addEventListener("change", updateUI);
    window.addEventListener("resize", updateUI, { passive: true });
    window.addEventListener("scroll", updateUI, { passive: true });

    // Close on link click
    menu?.querySelectorAll("a").forEach(a => {
      a.addEventListener("click", () => { if (toggle) toggle.checked = false; updateUI(); });
    });

    // Close on outside click
    document.addEventListener("pointerdown", (ev) => {
      if (!toggle?.checked) return;
      const t = ev.target;
      if (!menu.contains(t) && !btn.contains(t) && t !== toggle) {
        toggle.checked = false;
        updateUI();
      }
    });

    // Close on ESC
    document.addEventListener("keydown", (ev) => {
      if (ev.key === "Escape" && toggle?.checked) {
        toggle.checked = false;
        updateUI();
      }
    });
  });
</script>

